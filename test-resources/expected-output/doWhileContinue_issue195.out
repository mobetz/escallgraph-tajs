fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js)
    ->[block 1]
  block 1:
    node 1: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 2: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 3: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 4: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 5: constant["PRE",-]* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:1:1)
    ->[block 5]
  block 5:
    node 6: constant["BODY1",-]* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:3:4)
    node 7: constant["BODY-COND1",v6] (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:4:7)
    node 8: if[v6](true-block:6,false-block:7)* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:4:4)
    ->[block 6,block 7] ~>[block 12]
  block 6:
    node 9: nop(continue <DEFAULT>)* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:4:21)
    ->[block 10] ~>[block 12]
  block 7:
    node 10: constant["BODY-COND2",v7] (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:5:7)
    node 11: if[v7](true-block:8,false-block:9)* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:5:4)
    ->[block 8,block 9] ~>[block 12]
  block 8:
    node 12: nop(break <DEFAULT>)* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:5:21)
    ->[block 13] ~>[block 12]
  block 9:
    node 13: constant["BODY2",-]* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:6:4)
    ->[block 10] ~>[block 12]
  block 10:
    node 14: constant["COND",v5] (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:7:10)
    node 15: begin-loop[v5] (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:2:4)
    ->[block 11] ~>[block 12]
  block 11:
    node 16: if[v5](true-block:5,false-block:13)* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:7:10)
    ->[block 5,block 13] ~>[block 12]
  block 12:
    node 17: end-loop[v5]* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:7:10)
    ->[block 16]
  block 13:
    node 18: end-loop[v5]* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:7:10)
    ->[block 14]
  block 14:
    node 19: constant["POST",-]* (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:8:1)
    ->[block 15]
  block 15: [exit-ordinary]
    node 20: return[v1] (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js)
    ->[]
  block 16: [exit-exceptional]
    node 21: exceptional-return (out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js)
    ->[]

out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js: [definite] Ordinary program exit is unreachable
out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:4:4: [definite] The conditional expression is always true
out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js:7:10: [definite] The conditional expression is always true
out/temp-sources/TestFlowgraphBuilder.doWhileContinue_issue195.js: [definite] Exceptional program exit is unreachable
Soundness testing succeeded for 0 checks (with 0 expected failures)
