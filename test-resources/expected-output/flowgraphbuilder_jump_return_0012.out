fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js)
    node 1: function-decl[function f(),-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:1:1)
    ->[block 1]
  block 1:
    node 2: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 3: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 4: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 5: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 6: read-variable['f',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:12:1)
    ->[block 5]
  block 5:
    node 7: call[v5,v6,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:12:1)
    ->[block 6]
  block 6:
    node 8: constant[false,v9] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:13:13)
    ->[block 7]
  block 7:
    node 9: call[TAJS_assert,v9,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:13:1)
    ->[block 8]
  block 8: [exit-ordinary]
    node 10: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js)
    ->[]
  block 9: [exit-exceptional]
    node 11: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js)
    ->[]
function f()
  block 10: [entry]
    node 12: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:1:1)
    ->[block 11]
  block 11:
    node 13: read-variable['p',v16,v15] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:3:9)
    ->[block 12] ~>[block 13]
  block 12:
    node 14: call[v15,v16,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:3:9)
    ->[block 22] ~>[block 13]
  block 13:
    node 15: catch[v2] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:2:5)
    ->[block 14]
  block 14:
    node 16(~25): read-variable['p',v4,v3] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:6:13)
    ->[block 15] ~>[block 16]
  block 15:
    node 17(~26): call[v3,v4,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:6:13)
    ->[block 21] ~>[block 16]
  block 16:
    node 18: catch[e,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    node 19: begin-with[v5]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    ->[block 17]
  block 17:
    node 20: read-variable['p',v8,v7] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:8:13)
    ->[block 18] ~>[block 19]
  block 18:
    node 21: call[v7,v8,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:8:13)
    ->[block 20] ~>[block 19]
  block 19:
    node 22: end-with* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    ->[block 30]
  block 20:
    node 23: end-with* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    ->[block 21]
  block 21:
    node 24: throw[v2]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:2:5)
    ->[block 30]
  block 22:
    node 25: read-variable['p',v10,v9] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:6:13)
    ->[block 23] ~>[block 24]
  block 23:
    node 26: call[v9,v10,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:6:13)
    ->[block 29] ~>[block 24]
  block 24:
    node 27: catch[e,v11] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    node 28: begin-with[v11]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    ->[block 25]
  block 25:
    node 29: read-variable['p',v14,v13] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:8:13)
    ->[block 26] ~>[block 27]
  block 26:
    node 30: call[v13,v14,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:8:13)
    ->[block 28] ~>[block 27]
  block 27:
    node 31: end-with* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    ->[block 30]
  block 28:
    node 32: end-with* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11)
    ->[block 29]
  block 29: [exit-ordinary]
    node 33: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:1:1)
    ->[]
  block 30: [exit-exceptional]
    node 34: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:1:1)
    ->[]

test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js: [definite] Ordinary program exit is unreachable
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:3:9: [definite] ReferenceError, reading absent variable p
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:6:13: [definite] ReferenceError, reading absent variable p
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:8:13: [definite] ReferenceError, reading absent variable p
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:3:9: [definite] Unreachable code
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:6:13: [definite] Unreachable code
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:7:11: [definite] Unreachable code
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:8:13: [definite] Unreachable code
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:13:13: [definite] Unreachable code
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js: [maybe] Uncaught exception, constructed at [test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0012.js:8:13]
Soundness testing succeeded for 7 checks (with 0 expected failures)
