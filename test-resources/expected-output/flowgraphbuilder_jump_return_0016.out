fg2: <main> function()
  block 0: [entry]
    node 0: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js)
    node 1: function-decl[function f(),-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[block 1]
  block 1:
    node 2: constant["tajs-host-env:string-replace-model.js",v2] (host-environment-sources-loader)
    node 3: constant[true,v3] (host-environment-sources-loader)
    ->[block 2]
  block 2:
    node 4: call[TAJS_load,v2,v3,v4] (host-environment-sources-loader)
    ->[block 3]
  block 3:
    node 5: call[-,v4,-] (host-environment-sources-loader)
    ->[block 4]
  block 4:
    node 6: read-variable['f',v9,v8] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:12:13)
    ->[block 5]
  block 5:
    node 7: call[v8,v9,v7] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:12:13)
    ->[block 6]
  block 6:
    node 8: call[TAJS_assert,v7,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:12:1)
    ->[block 7]
  block 7:
    node 9: constant["OK",v12] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:14:16)
    ->[block 8]
  block 8:
    node 10: call[TAJS_dumpValue,v12,-]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:14:1)
    ->[block 9]
  block 9: [exit-ordinary]
    node 11: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js)
    ->[]
  block 10: [exit-exceptional]
    node 12: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js)
    ->[]
function f()
  block 11: [entry]
    node 13: constant[undefined,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[block 12]
  block 12:
    node 14: read-variable['toString',v13,v12] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20)
    ->[block 13] ~>[block 16]
  block 13:
    node 15: call[v12,v13,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20)
    ->[block 14] ~>[block 16]
  block 14:
    node 16: if[v1](true-block:15,false-block:24) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20)
    ->[block 15,block 24] ~>[block 16]
  block 15:
    node 17: constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:34)
    ->[block 24] ~>[block 16]
  block 16:
    node 18: catch[v7] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:3:9)
    node 19(~37): read-variable['toString',v9,v8] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 17] ~>[block 38]
  block 17:
    node 20(~38): call[v8,v9,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 18] ~>[block 38]
  block 18:
    node 21(~39): if[v1](true-block:19,false-block:20) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 19,block 20] ~>[block 38]
  block 19:
    node 22(~40): constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:34)
    ->[block 20] ~>[block 38]
  block 20:
    node 23(~46): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 21]
  block 21:
    node 24(~47): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 22]
  block 22:
    node 25(~48): if[v1](true-block:23,false-block:54) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 23,block 54]
  block 23:
    node 26(~49): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 54]
  block 24:
    node 27(~37): read-variable['toString',v11,v10] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 25] ~>[block 38]
  block 25:
    node 28(~38): call[v10,v11,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 26] ~>[block 38]
  block 26:
    node 29(~39): if[v1](true-block:27,false-block:28) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 27,block 28] ~>[block 38]
  block 27:
    node 30(~40): constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:34)
    ->[block 28] ~>[block 38]
  block 28:
    node 31(~50): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 29]
  block 29:
    node 32(~51): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 30]
  block 30:
    node 33(~52): if[v1](true-block:31,false-block:54) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 31,block 54]
  block 31:
    node 34(~53): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 54]
  block 32:
    node 35: throw[v2]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:2:5)
    ->[block 55]
  block 33:
    node 36: throw[v7]* (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:3:9)
    ->[block 38] ~>[block 38]
  block 34:
    node 37: read-variable['toString',v11,v10] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 35] ~>[block 38]
  block 35:
    node 38: call[v10,v11,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 36] ~>[block 38]
  block 36:
    node 39: if[v1](true-block:37,false-block:42) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20)
    ->[block 37,block 42] ~>[block 38]
  block 37:
    node 40: constant[false,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:34)
    ->[block 42] ~>[block 38]
  block 38:
    node 41: catch[v2] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:2:5)
    node 42(~50): read-variable['toString',v4,v3] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 39]
  block 39:
    node 43(~51): call[v3,v4,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 40]
  block 40:
    node 44(~52): if[v1](true-block:41,false-block:54) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 41,block 54]
  block 41:
    node 45(~53): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 54]
  block 42:
    node 46(~50): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 43]
  block 43:
    node 47(~51): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 44]
  block 44:
    node 48(~52): if[v1](true-block:45,false-block:54) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 45,block 54]
  block 45:
    node 49(~53): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 54]
  block 46:
    node 50: read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 47]
  block 47:
    node 51: call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 48]
  block 48:
    node 52: if[v1](true-block:49,false-block:54) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 49,block 54]
  block 49:
    node 53: constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 54]
  block 50:
    node 54(~50): read-variable['toString',v6,v5] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 51]
  block 51:
    node 55(~51): call[v5,v6,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 52]
  block 52:
    node 56(~52): if[v1](true-block:53,false-block:54) (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16)
    ->[block 53,block 54]
  block 53:
    node 57(~53): constant[true,v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:30)
    ->[block 54]
  block 54: [exit-ordinary]
    node 58: return[v1] (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[]
  block 55: [exit-exceptional]
    node 59: exceptional-return (test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:1:1)
    ->[]

test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:4:20: [definite] The conditional expression is always true
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:6:20: [definite] The conditional expression is always true
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:9:16: [definite] The conditional expression is always true
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js: [definite] Exceptional program exit is unreachable
test-resources/src/flowgraphbuilder/flowgraph_builder_jump_return_0016.js:14:1: [info] Abstract value: "OK"
Soundness testing succeeded for 21 checks (with 0 expected failures)
