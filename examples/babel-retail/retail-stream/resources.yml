frameworkVersion: '>=1.0.0 <2.0.0'

service: helloRetail-stream

custom:
  stage: dev
  private: ${file(../private.yml)}
  helloRetail: ${file(../helloRetail.yml)}
  # Retail Stream Versions & Exports
  # WARNING: each project that uses these will have to define the following two attributes in its resources.yml: (custom.retailStreamVersion, custom.retailStream)
  retailStreamVersion: 1 # The version of this service to depend upon
  retailStream: ${self:} # externally, use `${file(~/retail-stream/resources.yml)}`, replacing the `~` therein with the appropriate relative reference [e.g. '..' or '../..']
  # Exports
  exportRetailStreamName: ${self:custom.retailStream.service}:dev:RetailStreamName:${self:custom.retailStreamVersion}
  exportRetailStreamArn: ${self:custom.retailStream.service}:dev:RetailStreamArn:${self:custom.retailStreamVersion}
  exportRetailStreamWriterArn: ${self:custom.retailStream.service}:dev:RetailStreamWriterArn:${self:custom.retailStreamVersion}
  exportRetailStreamReaderArn: ${self:custom.retailStream.service}:dev:RetailStreamReaderArn:${self:custom.retailStreamVersion}

provider:
  name: aws
  deploymentBucket: helloRetailBucket
  runtime: nodejs8.10
  profile: DEFAULT_PROFILE
  region: us-east-1
  environment:
    STAGE: dev

resources:
  Resources:
    # Retail Stream
    RetailStream:
      Type: 'AWS::Kinesis::Stream'
      Properties:
        Name: devRetailStream
        ShardCount: 10

    # Role for direct producers
    RetailStreamWriter:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: devRetailStreamWriter${self:custom.retailStreamVersion}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: # role ARNs that are allowed to write to the Retail stream
                  - arn:aws:iam::XXX:role/${self:custom.private.teamRole}
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - DEFAULT_TEAM_POLICY
        Policies:
          - PolicyName: WriteToStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                -  Effect: Allow
                   Action:
                     - 'kinesis:DescribeStream'
                     - 'kinesis:PutRecord'
                     - 'kinesis:PutRecords'
                   Resource:
                     Fn::GetAtt: [ RetailStream, Arn ]
    # Role for direct consumers
    RetailStreamReader:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: devRetailStreamReader${self:custom.retailStreamVersion}
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                AWS: # role ARNs that are allowed to read from the Retail stream
                  - 'arn:aws:iam::XXX:role/${self:custom.private.teamRole}'
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - DEFAULT_TEAM_POLICY
        Policies:
          - PolicyName: ReadFromStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                -  Effect: Allow
                   Action:
                     - 'kinesis:DescribeStream'
                     - 'kinesis:GetRecords'
                     - 'kinesis:GetShardIterator'
                     - 'kinesis:ListStreams'
                   Resource:
                     Fn::GetAtt: [ RetailStream, Arn ]

  Outputs:
    RetailStreamName:
      Description: The Name of the Retail Stream
      Value:
        Ref: RetailStream
      Export:
        Name: RETAIL_STREAM
    RetailStreamArn:
      Description: The ARN for the Retail Stream
      Value:
        Fn::GetAtt: [ RetailStream, Arn ]
      Export:
        Name: ${self:custom.retailStream.custom.exportRetailStreamArn}
    RetailStreamWriterArn:
      Description: The ARN for the defined Role that can write events to the RetailStream
      Value:
        Fn::GetAtt: [ RetailStreamWriter, Arn ]
      Export:
        Name: ${self:custom.retailStream.custom.exportRetailStreamWriterArn}
    RetailStreamReaderArn:
      Description: The ARN for the defined Role that can read events from the RetailStream
      Value:
        Fn::GetAtt: [ RetailStreamReader, Arn ]
      Export:
        Name: ${self:custom.retailStream.custom.exportRetailStreamReaderArn}
